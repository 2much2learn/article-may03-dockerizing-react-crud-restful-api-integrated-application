{"version":3,"sources":["logo.svg","context/AppReducer.js","http-common.js","services/CatalogueService.js","context/GlobalState.js","components/Heading.js","components/CatalogueItemlist.js","components/Home.js","constants/index.js","components/AddCatalogueItem.js","components/EditCatalogueItem.js","App.js","i18n.js","index.js"],"names":["module","exports","state","action","prepareNotificationToDisplay","status","message","display","type","console","log","payload","error","notification","catalogueItems","updatedcatalogueItems","_","remove","item","sku","updatedcatalogueItem","map","catalogueItem","axios","create","baseURL","headers","http","get","data","post","put","delete","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","dispatchAPICallFailure","e","getCatalogueItems","a","catalogueService","then","response","catch","getCatalogueItem","removecatalogueItem","addcatalogueItem","editcatalogueItem","Provider","value","Heading","useTranslation","t","i18n","useContext","useState","notificationToDisplay","setNotificationToDisplay","language","setLanguage","changeLanguage","lng","useEffect","className","onClick","xmlns","viewBox","d","to","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","CatalogueItemlist","points","length","key","category","name","description","price","inventory","Home","categoryOptions","label","AddCatalogueItem","form","setState","history","useHistory","updateField","target","onSubmit","preventDefault","newcatalogueItem","push","htmlFor","onChange","placeholder","selectedOption","options","getOptionLabel","option","EditCatalogueItem","route","selectedCatalogueItem","setSeletedCatalogueItem","match","params","catalogueItemSku","find","filter","Loader","src","logo","alt","App","fallback","path","component","exact","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0d00302.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d40e50f0.svg\";","import _ from 'lodash';\n\nexport default (state, action) => {\n\n    function prepareNotificationToDisplay(status, message) {\n        return {\n            display: true,\n            status: status,\n            message: message\n        }\n    }\n    \n    if(action.type === 'API_CALL_FAILED') {\n        console.log(action.payload,action.error);\n        return {\n            ...state,\n            notification: prepareNotificationToDisplay(\"failure\", action.payload)\n        };\n    }\n    else if(action.type === 'GET_CATALOGUE_ITEMS') {\n        //console.log(\"===> GET_catalogueItemS_ITEMS received\", action.payload);\n        return {\n            ...state,\n            catalogueItems: action.payload\n        };\n    }\n    else if(action.type === 'GET_CATALOGUE_ITEM') {\n        //console.log(\"===> GET_catalogueItemS_ITEM received\", action.payload);\n        return {\n            ...state,\n            catalogueItems: [...state.catalogueItems, action.payload]\n        };\n    }\n    else if(action.type === 'REMOVE_catalogueItem') {\n\n        const updatedcatalogueItems = state.catalogueItems;\n\n        _.remove(updatedcatalogueItems, (item) => item.sku === action.payload);\n\n        return {\n            ...state,\n            catalogueItems: updatedcatalogueItems,\n            notification: prepareNotificationToDisplay(\"success\", 'notifications.success.itemRemoved')\n        };\n    }\n    else if(action.type === 'ADD_catalogueItem') {\n        //console.log(\"===> ADD_catalogueItem ::\", state, action);\n        return {\n            ...state,\n            catalogueItems: [...state.catalogueItems, action.payload],\n            notification: prepareNotificationToDisplay(\"success\", 'notifications.success.itemAdded')\n        };\n    }\n    else if(action.type === 'EDIT_catalogueItem') {\n        const updatedcatalogueItem = action.payload;\n\n        const updatedcatalogueItems = state.catalogueItems.map(catalogueItem => {\n            if (catalogueItem.sku === updatedcatalogueItem.sku) {\n                return updatedcatalogueItem;\n            }\n            return catalogueItem;\n        });\n\n        return {\n            ...state,\n            catalogueItems: updatedcatalogueItems,\n            notification: prepareNotificationToDisplay(\"success\", 'notifications.success.itemUpdated')\n        };\n    }\n    else {\n        return state;\n    }\n}","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api/v1\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/\");\n};\n\nconst get = sku => {\n  return http.get(`/${sku}`);\n};\n\nconst create = data => {\n  return http.post(\"/\", data);\n};\n\nconst update = (sku, data) => {\n  return http.put(`/${sku}`, data);\n};\n\nconst remove = sku => {\n  return http.delete(`/${sku}`);\n};\n\n\nexport default {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n};","import React, { createContext, useReducer } from 'react';\n\nimport AppReducer from './AppReducer'\nimport catalogueService from '../services/CatalogueService'\n\nexport const GlobalContext = createContext();\nexport const GlobalProvider = ({ children }) => {\n\n    const initialState = {\n        catalogueItems: [],\n        notification: {\n            display: false,\n            status: '',\n            message: ''\n        }\n    }\n\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    function dispatchAPICallFailure(message, e) {\n        dispatch({\n            type: 'API_CALL_FAILED',\n            error: e,\n            payload: message\n        });\n    }\n\n    const getCatalogueItems = async () => {\n        await catalogueService\n        .getAll()\n        .then(response => {\n            //console.log(\"======> getCatalogueItems response :: \",response.data);\n            dispatch({\n                type: 'GET_CATALOGUE_ITEMS',\n                payload: response.data.data\n            });            \n        })\n        .catch(e => {            \n            dispatchAPICallFailure('notifications.failure.itemGetAll', e);\n        });\n    };\n\n    const getCatalogueItem = async (sku) => {\n        state.notification.display = false;\n\n        await catalogueService\n        .get(sku)\n        .then(response => {\n            //console.log(\"======> getCatalogueItem response :: \",response.data);\n            dispatch({\n                type: 'GET_CATALOGUE_ITEM',\n                payload: response.data\n            });\n        })\n        .catch(e => {\n            dispatchAPICallFailure('notifications.failure.itemGet', e);\n        });\n    };\n\n    const removecatalogueItem = async (sku) => {\n        state.notification.display = false;\n\n        await catalogueService\n        .remove(sku)\n        .then(response => {\n            //console.log(\"======> removecatalogueItem response :: \",response);\n            dispatch({\n                type: 'REMOVE_catalogueItem',\n                payload: sku\n            });\n        })\n        .catch(e => {\n            dispatchAPICallFailure('notifications.failure.itemRemoved', e);\n        });\n    };\n\n    const addcatalogueItem = async (catalogueItem) => {\n        state.notification.display = false;\n\n        await catalogueService\n        .create(catalogueItem)\n        .then(response => {\n            //console.log(\"======> addcatalogueItem response :: \",response);\n            dispatch({\n                type: 'ADD_catalogueItem',\n                payload: catalogueItem\n            });            \n        })\n        .catch(e => {\n            dispatchAPICallFailure('notifications.failure.itemAdded', e);\n        });\n    };\n\n    const editcatalogueItem = async (catalogueItem) => {\n        state.notification.display = false;\n        \n        await catalogueService\n        .update(catalogueItem.sku, catalogueItem)\n        .then(response => {\n            //console.log(\"======> editcatalogueItem response :: \",response);\n            dispatch({\n                type: 'EDIT_catalogueItem',\n                payload: catalogueItem\n            });\n        })\n        .catch(e => {\n            dispatchAPICallFailure('notifications.failure.itemUpdated', e);\n        });\n    };\n\n    return (<GlobalContext.Provider value={{\n        catalogueItems: state.catalogueItems,\n        notification: state.notification,\n        removecatalogueItem,\n        addcatalogueItem,\n        editcatalogueItem,\n        getCatalogueItems,\n        getCatalogueItem\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}","import React, { useState, useContext, useEffect, Fragment } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nexport const Heading = () => {\n\n    const { t, i18n } = useTranslation();\n    const { notification } = useContext(GlobalContext);\n    const [notificationToDisplay, setNotificationToDisplay] \n        = useState({\n            display: false,\n            message: ''\n        });\n    \n    const [language, setLanguage] = useState('en');\n\n    const changeLanguage = lng => {\n        i18n.changeLanguage(lng);\n        \n        setLanguage(lng);\n    };\n\n    useEffect(() => {\n        setNotificationToDisplay(notification);\n    }, [notification]);\n\n    return (\n        <Fragment>\n        <div className=\"mt-5\">\n            <button className={(language === 'en' ? 'bg-blue-500' : 'bg-blue-200') + ` hover:bg-blue-700 text-white font-bold py-2 px-4 rounded m-2`}\n                onClick={() => changeLanguage('en')}>English</button>\n            <button className={(language === 'de' ? 'bg-blue-500' : 'bg-blue-200') + ` hover:bg-blue-700 text-white font-bold py-2 px-4 rounded`}\n                onClick={() => changeLanguage('de')}>Dutch</button>\n        </div>\n        <div>\n            {notificationToDisplay.display && \n                <div className={(notificationToDisplay.status === 'success' ? 'bg-green-200' : 'bg-red-200')  + ' mt-10 bg-teal-lightest border-t-4 border-teal rounded-b text-teal-darkest px-4 py-3 shadow-md my-2\" role=\"alert'}>\n                    <div className=\"flex\">\n                        <svg className=\"h-6 w-6 text-teal mr-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\"/></svg>\n                        <div>\n                            <p className=\"font-bold\">{t(notificationToDisplay.message)}</p>\n                        </div>\n                    </div>                    \n                </div>                \n            }\n            <div className=\"flex items-center mt-10 mb-10\">\n                <div className=\"flex-grow text-left px-4 py-2 m-2\">\n                    <h5 className=\"text-gray-900 font-bold text-xl\">{t('title')}</h5>\n                </div>\n                <div className=\"flex-grow text-right px-4 py-2 m-2\">\n                    <Link to=\"/add\">\n                        <button className=\"bg-green-400 hover:bg-green-500 text-white font-semibold py-2 px-4 rounded inline-flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-plus-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg>\n                            <span className=\"pl-2\">{t('controls.add')}</span>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n}\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nexport const CatalogueItemlist = () => {\n    const { catalogueItems, removecatalogueItem, getCatalogueItems } = useContext(GlobalContext);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        getCatalogueItems();\n    }, []);\n\n    return (\n        <Fragment>\n            <div className=\"flex items-center bg-gray-200 mb-10 shadow\" >\n                <div className=\"flex-auto text-left\">\n                    <div className=\"grid grid-cols-6 divide-x divide-gray-400 mr-3 py-2 px-4\">\n                        <div className=\"col-span-1 text-gray-600\">{t('form.sku')}</div>\n                        <div className=\"col-span-1 \">{t('form.category')}</div>\n                        <div className=\"col-span-2 text-left\">\n                            <div className=\"\">{t('form.name')}</div>\n                        </div>                                    \n                        <div className=\"col-span-1 text-center\">{t('form.price')}</div>\n                        <div className=\"col-span-1 text-center\">{t('form.inventory')}</div>\n                    </div>\n                </div>\n                <div className=\"flex text-right px-4 py-2 m-2\">\n                <Link to='/'>\n                    <button\n                        className=\"cursor-not-allowed bg-gray-100 text-gray-400 font-semibold mr-3 py-2 px-4 rounded-full inline-flex items-center\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-edit\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\n                    </button>\n                </Link>\n                <button\n                    className=\" cursor-not-allowed block bg-gray-100 text-gray-400 font-semibold py-2 px-4 rounded-full inline-flex items-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-trash-2\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n                </button>\n                </div>\n            </div>      \n            {catalogueItems.length > 0 ? <Fragment>\n                {catalogueItems.map(catalogueItem => (\n                    <div className=\"flex items-center bg-gray-100 mb-4 shadow\" key={catalogueItem.sku}>\n                        <div className=\"flex-auto text-left\">\n                            <div className=\"grid grid-cols-6 divide-x divide-gray-400 mr-3 py-2 px-4\">\n                                <div className=\"col-span-1 text-gray-600\">{catalogueItem.sku}</div>\n                                <div className=\"col-span-1 \">{t(`categories.`+catalogueItem.category)}</div>\n                                <div className=\"col-span-2 text-left\">\n                                    <div className=\"\">{catalogueItem.name}</div>\n                                    <div className=\"text-sm font-semibold mt-1\">{catalogueItem.description}</div>\n                                </div>                                    \n                                <div className=\"col-span-1 text-center\">$ {catalogueItem.price}</div>\n                                <div className=\"col-span-1 text-center\">{catalogueItem.inventory}</div>\n                            </div>\n                        </div>\n                        <div className=\"flex text-right px-4 py-2 m-2\">\n                            <Link to={`/edit/${catalogueItem.sku}`}>\n                                <button\n                                    className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold mr-3 py-2 px-4 rounded-full inline-flex items-center\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-edit\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\n                                </button>\n                            </Link>\n                            <button \n                                onClick={() => removecatalogueItem(catalogueItem.sku)} \n                                className=\"block bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-full inline-flex items-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-trash-2\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </Fragment> : <p className=\"text-center bg-gray-100 text-gray-500 py-5\">{t('nodata')}</p>}\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react';\nimport { Heading } from './Heading';\nimport { CatalogueItemlist } from './CatalogueItemlist';\n\nexport const Home = () => {\n    return (\n        <Fragment>\n            <div className=\"App\">\n                <div className=\"container mx-auto\">\n                    <Heading />\n                    <CatalogueItemlist />\n                </div>\n            </div>\n        </Fragment>\n    )\n}","export const categoryOptions = [\n    { value: 'Books', label: 'categories.books' },\n    { value: 'Music', label: 'categories.music' },\n    { value: 'Movies', label: 'categories.movies' },\n    { value: 'Games', label: 'categories.games' },\n    { value: 'Electronics', label: 'categories.electronics' },\n    { value: 'Computers', label: 'categories.computers' },\n    { value: 'Office', label: 'categories.office' }\n];","import React, { Fragment, useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select'\nimport { useTranslation } from 'react-i18next';\nimport { categoryOptions } from '../constants'\n\nexport const AddCatalogueItem = () => {\n    const { t } = useTranslation();\n\n    const [form, setState] = useState({\n        sku: '',\n        name: '',\n        description: '',\n        category: '',\n        price: '',\n        inventory: ''\n    })\n    \n    \n    const { addcatalogueItem } = useContext(GlobalContext);\n    let history = useHistory();\n\n    const updateField = e => {\n        setState({\n            ...form,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const updateCategoryChange = selectedOption => {\n        setState({ \n            ...form,\n            category: selectedOption\n        });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const newcatalogueItem = {\n            sku: form.sku,\n            name: form.name,\n            description: form.description,\n            category: form.category.value,\n            price: form.price,\n            inventory: form.inventory\n        }\n\n        console.log(\"==> Catalogue item being submitted :: \", newcatalogueItem);\n\n        addcatalogueItem(newcatalogueItem);\n        history.push(\"/\");\n    }\n\n    return (\n        <Fragment>\n            <div className=\"w-full max-w-sm container mt-20 mx-auto\">\n                <form onSubmit={onSubmit}>\n                <div className=\"w-full mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"sku\">\n                            {t('form.sku')}\n                        </label>\n                        <input \n                            name=\"sku\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" \n                            value={form.sku} \n                            onChange={updateField} \n                            type=\"text\"\n                            placeholder={t('forms_placeholder.sku')}/>\n                    </div>\n                    <div className=\"w-full mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"name\">\n                            {t('form.name')}\n                        </label>\n                        <input \n                            name=\"name\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" \n                            value={form.name} \n                            onChange={updateField} \n                            type=\"text\" \n                            placeholder={t('forms_placeholder.name')} />\n                    </div>\n                    <div className=\"w-full  mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"description\">\n                            {t('form.description')}\n                        </label>\n                        <input \n                            name=\"description\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" \n                            value={form.description} \n                            onChange={updateField} \n                            type=\"text\" \n                            placeholder={t('forms_placeholder.description')} />\n                    </div>\n                    <div className=\"w-full mb-5\">\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"category\">\n                            {t('form.category')}\n                        </label>\n                        <Select \n                            name=\"category\"\n                            className=\"block appearance-none w-full rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                            value={form.category} \n                            onChange={updateCategoryChange}\n                            placeholder={t('forms_placeholder.category')}\n                            options={categoryOptions}\n                            getOptionLabel={option =>\n                                t(`${option.label}`)\n                            }>\n                        >\n                        </Select>\n                    </div>\n                    <div className=\"w-full  mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"price\">\n                            {t('form.price')}\n                        </label>\n                        <input \n                            name=\"price\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" \n                            value={form.price} \n                            onChange={updateField}\n                            type=\"number\" \n                            placeholder={t('forms_placeholder.price')} />\n                    </div>\n                    <div className=\"w-full  mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"inventory\">\n                            {t('form.inventory')}\n                        </label>\n                        <input \n                            name=\"inventory\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" \n                            value={form.inventory} \n                            onChange={updateField} \n                            type=\"number\" \n                            placeholder={t('forms_placeholder.inventory')} />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                        <button \n                            className=\"mt-5 bg-green-400 w-full hover:bg-green-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\n                            {t('controls.addItem')}\n                        </button>\n                    </div>\n                    <div className=\"text-center mt-4 text-gray-500\"><Link to='/'>{t('controls.cancel')}</Link></div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}","import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport Select from 'react-select'\nimport { categoryOptions } from '../constants'\n\nexport const EditCatalogueItem = (route) => {\n    const { t } = useTranslation();\n\n    let history = useHistory();\n    const { catalogueItems, getCatalogueItem, editcatalogueItem } = useContext(GlobalContext);\n    const [selectedCatalogueItem, setSeletedCatalogueItem] \n        = useState({\n            sku: '',\n            name: '',\n            description: '',\n            category: '',\n            price: '',\n            inventory: ''\n        });\n\n    const sku = route.match.params.sku;\n\n    useEffect(() => {\n        const catalogueItemSku = sku;\n\n        getCatalogueItem(sku);\n\n        const selectedCatalogueItem = catalogueItems.find(catalogueItem => catalogueItem.sku === catalogueItemSku);\n        setSeletedCatalogueItem(selectedCatalogueItem);\n        // eslint-disable-next-line\n    }, []);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        editcatalogueItem(selectedCatalogueItem);\n        history.push('/');\n    }\n\n    const updateCategoryChange = selectedOption => {\n        setSeletedCatalogueItem({ \n            ...selectedCatalogueItem,\n            category: selectedOption.value\n        });\n    };\n\n    const updateField = e => {\n        setSeletedCatalogueItem({\n            ...selectedCatalogueItem,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    return (        \n        <Fragment>\n            <div className=\"w-full max-w-sm container mt-20 mx-auto\">\n                <form onSubmit={onSubmit}>\n                    <div className=\"w-full mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"sku\">\n                            {t('form.sku')}\n                        </label>\n                        <input \n                            name=\"sku\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" \n                            value={selectedCatalogueItem.sku} \n                            onChange={updateField} \n                            type=\"text\" \n                            placeholder={t('forms_placeholder.sku')} />\n                    </div>\n                    <div className=\"w-full mb-5\">\n                        <label \n                            className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" \n                            htmlFor=\"name\">\n                            {t('form.name')}\n                        </label>\n                        <input \n                            name=\"name\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" \n                            value={selectedCatalogueItem.name} \n                            onChange={updateField} \n                            type=\"text\" \n                            placeholder={t('forms_placeholder.name')} />\n                    </div>\n                    <div className=\"w-full  mb-5\">\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"description\">\n                        {t('form.description')}\n                        </label>\n                        <input \n                            name=\"description\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" \n                            value={selectedCatalogueItem.description} \n                            onChange={updateField} \n                            type=\"text\" \n                            placeholder={t('forms_placeholder.description')} />\n                    </div>\n                    <div className=\"w-full mb-5\">\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"category\">\n                            {t('form.category')}\n                        </label>\n                        <div className=\"relative\">\n                            <Select \n                                name=\"category\"\n                                className=\"block appearance-none w-full rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                                value={categoryOptions.filter(option => option.value === selectedCatalogueItem.category)}\n                                onChange={updateCategoryChange}\n                                placeholder={t('forms_placeholder.category')}\n                                options={categoryOptions}\n                                getOptionLabel={option =>\n                                    t(`${option.label}`)\n                                }>\n                            >\n                            </Select>                            \n                        </div>\n                    </div>\n                    <div className=\"w-full  mb-5\">\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"price\">\n                        {t('form.price')}\n                        </label>\n                        <input \n                            name=\"price\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" \n                            value={selectedCatalogueItem.price}\n                            onChange={updateField}\n                            type=\"number\" \n                            placeholder={t('forms_placeholder.price')} />\n                    </div>\n                    <div className=\"w-full  mb-5\">\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"inventory\">\n                        {t('form.inventory')}\n                        </label>\n                        <input \n                            name=\"inventory\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" \n                            value={selectedCatalogueItem.inventory}\n                            onChange={updateField}\n                            type=\"text\" \n                            placeholder={t('forms_placeholder.inventory')} />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                        <button \n                            className=\"block mt-5 bg-green-400 w-full hover:bg-green-500 text-white font-bold py-2 px-4 rounded focus:text-gray-600 focus:shadow-outline\">\n                            {t('controls.editItem')}\n                        </button>\n                    </div>\n                    <div className=\"text-center mt-4 text-gray-500\"><Link to='/'>{t('controls.cancel')}</Link></div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}","import React, { Suspense }  from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './stylesheet/styles.css';\nimport { Home } from './components/Home';\nimport { AddCatalogueItem } from './components/AddCatalogueItem';\nimport { EditCatalogueItem } from './components/EditCatalogueItem';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// loading component for suspense fallback\nconst Loader = () => (\n  <div className=\"App\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <div>loading...</div>\n  </div>\n);\n\nfunction App() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <GlobalProvider>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/add\" component={AddCatalogueItem} exact />\n          <Route path=\"/edit/:sku\" component={EditCatalogueItem} exact />\n        </Switch>\n      </GlobalProvider>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  \n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  \n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './stylesheet/styles.css';\nimport App from './App';\n\n// import i18n (needs to be bundled ;))\nimport './i18n';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n)"],"sourceRoot":""}